provisioner: gcp
name: pipeline-config
version: 1
revision: 1
displayName: Configure Pipeline
description: Configure global pipeline options and environment.
target: config
keywords:
  - env
  - environment
  - secret
  - config
  - configuration
author: CloudCover
meta:
  gcpRoles:
    - roles/cloudkms.cryptoKeyDecrypter
inputs:
  properties:
    pipeline_disk_size_gb:
      title: Disk Size [GB]
      description: Amount of disk space in GB allocated for the pipeline.
      type: number
      default: 300
      maximum: 1000
    pipeline_env:
      title: Global Environment
      description: Mapping of globally available variables to values.
      type: object
      default: {}
    pipeline_logs_bucket:
      title: Logs Bucket
      description: Cloud Storage bucket for logs generated by the pipeline.
      type: string
      default: ""
    pipeline_machine_type:
      title: Machine Type
      description: Type of the VM used to run the pipeline.
      type: string
      default: UNSPECIFIED
    pipeline_secret_env:
      title: Global Secret Environment
      description: Mapping of globally available variables to encrypted values.
      type: object
      default: {}
    pipeline_secret_env_key:
      title: Secret Environment Encryption Key
      description: Name of a KMS key used to encrypt secret values.
      type: string
      default: ""
    pipeline_tags:
      title: Tags
      description: Tags assigned to the pipeline.
      type: array
      default: []
      items:
        type: string
    pipeline_timeout_sec:
      title: Timeout [s]
      description: Amount of time in seconds the pipeline will be allowed to run.
      type: integer
      default: 4000
    pipeline_module_git:
      title: Pipeline module git repo url
      description: git url for cloning the pipeline module repo.
      type: string
    pipeline_module_git_rev:
      title: Pipeline module git repo revision
      description: git revision for cloning the pipeline module repo.
      type: string
  internal:
    - pipeline_env
    - pipeline_secret_env
    - pipeline_secret_env_key
    - pipeline_module_git
    - pipeline_module_git_rev

template: |
  {% set workspace = '/workspace' %}   {# has to be a persistent volume #}
  {% set pipeline_env_file = workspace|add:'/.env' %}
  {% set pipeline_modules_path = workspace|add:'/pipeline_modules' %}

  steps:
  - id: 'Init setup'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      echo "installing jq v1.6"
      curl -sLJO https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
      mkdir {{workspace}}/bin && mv jq-linux64 {{workspace}}/bin/jq
      chmod +x {{workspace}}/bin/jq
      export PATH="$$PATH:{{workspace}}/bin"

      echo "Preparing user environment variables..."
      {% for env_key, env_value in pipeline_env %}
      printf '{{env_key}}=%s\n' "$(printf '%s' "$${{env_key}}" | jq -aRs .)" >> {{pipeline_env_file}}
      {% endfor %}
      {% for env_key, env_value in pipeline_secret_env %}
      printf '{{env_key}}=%s\n' "$(printf '%s' "$${{env_key}}" | jq -aRs .)" >> {{pipeline_env_file}}
      {% endfor %}

      echo "Cloning the pipeline modules..."
      mkdir -p {{pipeline_modules_path}}
      git clone {{pipeline_module_git}} --branch {{pipeline_module_git_rev}} --single-branch {{pipeline_modules_path}}
  timeout: {{ pipeline_timeout_sec }}s
  {% if pipeline_logs_bucket %}logsBucket: 'gs://{{ pipeline_logs_bucket }}'{% endif %}
  tags:
  {% for tag in pipeline_tags %}
  - {{tag}}
  {% endfor %}
  options:
   {% if pipeline_machine_type %}machineType: {{ pipeline_machine_type }}{% endif %}
   {% if pipeline_disk_size_gb %}diskSizeGb: '{{ pipeline_disk_size_gb }}'{% endif %}
   env:
   {% for env_key, env_value in pipeline_env %}
   - '{{env_key}}={{ env_value }}'
   {% endfor %}
   secretEnv:
     {% for env_key in pipeline_secret_env %}
     - {{env_key}}
     {% endfor %}
  {% if pipeline_secret_env && pipeline_secret_env_key %}
  secrets:
  - kmsKeyName: {{ pipeline_secret_env_key }}
    secretEnv:
      {% for env_key, env_value in pipeline_secret_env %}
      {{env_key}}: '{{ env_value }}'
      {% endfor %}
  {% endif %}
