{{- if .Values.ports -}}
{{- if (index .Values.ports 0).containerPort -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $.Values.applicationName }}-ingress
  namespace: {{ $.Values.applicationName }}
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    {{- if .Values.ingress }}
    {{- if .Values.ingress.domain }}
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.certificateArn }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    external-dns.alpha.kubernetes.io/hostname: "{{ .Values.ingress.appDomain }}"
    external-dns.alpha.kubernetes.io/alias: "true"
    alb.ingress.kubernetes.io/tags: createdBy=codepipes
    {{- end}}
    {{- end}}
spec:
{{- $len := len $.Values.ports }}
{{- if eq $len 1 }}
  defaultBackend:
    service:
      name: {{ $.Values.applicationName }}
      {{- range  $index,$port := $.Values.ports }}
      {{- if eq $index  0}}
      port:
        number: {{ $port.containerPort}}
      {{- end}}
      {{- end}}
{{- else}}
  rules:
  - http:
      paths:
      - path: /
        backend:
          service:
            name: ssl-redirect
            port:
              name: use-annotation
      {{- range $index,$port := $.Values.ports }}
      - path: /{{$port.name}}/*
        backend:
          service:
            name: {{ $.Values.applicationName }}
            port: 
              number: {{ $port.containerPort}}
      {{- end}}
{{- end }}
{{- end }}
{{- end }}